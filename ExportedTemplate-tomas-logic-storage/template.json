{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "String"
        },
        "workflows_LogicAppserData_name": {
            "defaultValue": "LogicAppserData",
            "type": "String"
        },
        "storageAccounts_storagejsonuserdata_name": {
            "defaultValue": "storagejsonuserdata",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[parameters('storageAccounts_storagejsonuserdata_name')]",
            "location": "uksouth",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_name')]",
            "location": "uksouth",
            "kind": "V1",
            "properties": {
                "displayName": "StorageAccountConnection",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2023-07-06T08:20:15.0068904Z",
                "changedTime": "2023-07-06T08:20:15.0068904Z",
                "api": {
                    "name": "[parameters('connections_azureblob_name')]",
                    "displayName": "Azure Blob Storage",
                    "description": "Microsoft Azure Storage provides a massively scalable, durable, and highly available storage for data on the cloud, and serves as the data storage solution for modern applications. Connect to Blob Storage to perform various operations such as create, update, get and delete on blobs in your Azure Storage account.",
                    "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1639/1.0.1639.3319/', parameters('connections_azureblob_name'), '/icon.png')]",
                    "brandColor": "#804998",
                    "id": "[concat('/subscriptions/0f599bff-4fc9-44ef-b746-7d12a62e7c45/providers/Microsoft.Web/locations/uksouth/managedApis/', parameters('connections_azureblob_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/0f599bff-4fc9-44ef-b746-7d12a62e7c45/resourceGroups/tomas-logic-storage/providers/Microsoft.Web/connections/', parameters('connections_azureblob_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_LogicAppserData_name')]",
            "location": "uksouth",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "properties": {
                                        "action": {
                                            "type": "string"
                                        },
                                        "userdata": {
                                            "type": "string"
                                        },
                                        "userid": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Switch_by_Action": {
                            "runAfter": {},
                            "cases": {
                                "Case_-_Create": {
                                    "case": "create",
                                    "actions": {
                                        "Create_blob_(V2)": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@triggerBody()?['userdata']",
                                                "headers": {
                                                    "ReadFileMetadataFromServer": true
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('storagejsonuserdata'))}/files",
                                                "queries": {
                                                    "folderPath": "/userdata",
                                                    "name": "@{triggerBody()?['userid']}.json",
                                                    "queryParametersSingleEncoded": true
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        },
                                        "Response_-_Created": {
                                            "runAfter": {
                                                "Create_blob_(V2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Response",
                                            "kind": "Http",
                                            "inputs": {
                                                "body": "Display Name: @{body('Create_blob_(V2)')?['DisplayName']}",
                                                "statusCode": 201
                                            }
                                        }
                                    }
                                },
                                "Case_-_Read": {
                                    "case": "read",
                                    "actions": {
                                        "Get_blob_content_(V2)": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('AccountNameFromSettings'))}/files/@{encodeURIComponent(encodeURIComponent('/userdata/',triggerBody()?['userid'],'.json'))}/content",
                                                "queries": {
                                                    "inferContentType": true
                                                }
                                            }
                                        },
                                        "Response_-_Read": {
                                            "runAfter": {
                                                "Get_blob_content_(V2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Response",
                                            "kind": "Http",
                                            "inputs": {
                                                "body": "Body: ->@{body('Get_blob_content_(V2)')}<-",
                                                "statusCode": 200
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {
                                    "Response_-_Unknown": {
                                        "runAfter": {},
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "body": "Action Unknown",
                                            "statusCode": 404
                                        }
                                    }
                                }
                            },
                            "expression": "@triggerBody()?['action']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/0f599bff-4fc9-44ef-b746-7d12a62e7c45/providers/Microsoft.Web/locations/uksouth/managedApis/azureblob"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_storagejsonuserdata_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagejsonuserdata_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "changeFeed": {
                    "enabled": false
                },
                "restorePolicy": {
                    "enabled": false
                },
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                },
                "isVersioningEnabled": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_storagejsonuserdata_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagejsonuserdata_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_storagejsonuserdata_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagejsonuserdata_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_storagejsonuserdata_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagejsonuserdata_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_storagejsonuserdata_name'), '/default/userdata')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storagejsonuserdata_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagejsonuserdata_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccounts_storagejsonuserdata_name'), '/default/Table1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccounts_storagejsonuserdata_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagejsonuserdata_name'))]"
            ],
            "properties": {}
        }
    ]
}